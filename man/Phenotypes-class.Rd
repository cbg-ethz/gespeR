% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{class}
\name{Phenotypes-class}
\alias{Phenotypes}
\alias{Phenotypes,cellHTS-method}
\alias{Phenotypes,character-method}
\alias{Phenotypes,numeric-method}
\alias{Phenotypes-class}
\title{Phenotypes}
\usage{
Phenotypes(phenotypes, ...)

\S4method{Phenotypes}{character}(phenotypes, type = c("SSP", "GSP"),
  sep = "\\t", col.id = 1, col.score = 2)

\S4method{Phenotypes}{cellHTS}(phenotypes, channel, sample)

\S4method{Phenotypes}{numeric}(phenotypes, ids = NULL, type = c("SSP",
  "GSP"))
}
\arguments{
\item{phenotypes}{The phenotypes as numeric vector, path to a .txt file with two columns (1: identifiers, 2: values), or a cellHTS object}

\item{...}{Additional arguments}

\item{type}{The type of phenotype (GSP, SSP)}

\item{sep}{The separator string}

\item{col.id}{Column number for the identifier}

\item{col.score}{Column number for the phenotype score}

\item{channel}{The cellHTS channel identifier}

\item{sample}{The cellHTS sample index}

\item{ids}{The phenotype identifiers}
}
\value{
A \code{\linkS4class{Phenotypes}} object
}
\description{
Class used to represent various types of phenotypes, e.g. from
siRNA-specific (SSP) or estimated gene-specific phenotypes (GSP).
}
\section{Slots}{

\describe{
\item{\code{type}}{The type of represented phenotypes (i.e., "SSP" or "GSP")}

\item{\code{ids}}{The phenotype identifiers (i.e., siRNA or gene ids)}

\item{\code{values}}{The phenotypic values}
}}
\examples{
# Read phenotypes
phenos <- lapply(LETTERS[1:4], function(x) {
  sprintf("Phenotypes_screen_\%s.txt", x)
  })
phenos <- lapply(phenos, function(x) {
  Phenotypes(system.file("extdata", x, package="gespeR"),
             type = "SSP",
             col.id = 1,
             col.score = 2)
})  
phenos
plot(phenos[[1]])

# Read target relations
tr <- lapply(LETTERS[1:4], function(x) {
  sprintf("TR_screen_\%s.rds", x)
})
tr <- lapply(tr, function(x) {
  TargetRelations(system.file("extdata", x, package="gespeR"))
})
tr[[1]]
tempfile <- paste(tempfile(pattern = "file", tmpdir = tempdir()), ".rds", sep="")
tr[[1]] <- unloadValues(tr[[1]], writeValues = TRUE, path = tempfile)
tr[[1]]
tr[[1]] <- loadValues(tr[[1]])
tr[[1]]

# Fit gespeR models with cross validation
res.cv <- lapply(1:length(phenos), function(i) {
  gespeR(phenotypes = phenos[[i]],
         target.relations = tr[[i]],
         mode = "cv",
         alpha = 0.5,
         ncores = 1)
})
summary(res.cv[[1]])
res.cv[[1]]
plot(res.cv[[1]])

# Extract scores
ssp(res.cv[[1]])
gsp(res.cv[[1]])
head(scores(res.cv[[1]]))

# Fit gespeR models with stability selection
res.stab <- lapply(1:length(phenos), function(i) {
  gespeR(phenotypes = phenos[[i]],
         target.relations = tr[[i]],
         mode = "stability",
         nbootstrap = 100,
         fraction = 0.67,
         threshold = 0.75,
         EV = 1,
         weakness = 0.8,
         ncores = 1)
})
summary(res.stab[[1]])
res.stab[[1]]
plot(res.stab[[1]])

# Extract scores
ssp(res.stab[[1]])
gsp(res.stab[[1]])
head(scores(res.stab[[1]]))

# Compare concordance between stability selected GSPs and SSPs
conc.gsp <- concordance(lapply(res.stab, gsp))
conc.ssp <- concordance(lapply(res.stab, ssp))

pl.gsp <- plot(conc.gsp) + ggtitle("GSPs\\n")
pl.ssp <- plot(conc.ssp) + ggtitle("SSPs\\n")

if (require(grid)) {
  grid.newpage()
  pushViewport(viewport(layout = grid.layout(1, 2) ) )
  print(pl.gsp, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
  print(pl.ssp, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
} else {
  plot(pl.gsp)
  plot(pl.ssp)
}
}
\author{
Fabian Schmich
}
\seealso{
\code{\link{plot.Phenotypes}}

\code{\link{join}}

\code{\link{gsp}}

\code{\link{ssp}}

\code{\link{scores}}

\code{\link{concordance}}
}

